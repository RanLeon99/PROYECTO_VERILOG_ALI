$date
	Sun Feb 26 16:21:06 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module mux8x1_tb $end
$var wire 4 ! out [3:0] $end
$var reg 4 " a [3:0] $end
$var reg 4 # b [3:0] $end
$var reg 4 $ c [3:0] $end
$var reg 4 % d [3:0] $end
$var reg 4 & e [3:0] $end
$var reg 1 ' enable $end
$var reg 4 ( f [3:0] $end
$var reg 4 ) g [3:0] $end
$var reg 4 * h [3:0] $end
$var reg 1 + sel0 $end
$var reg 1 , sel1 $end
$var reg 1 - sel2 $end
$scope module uut $end
$var wire 4 . a [3:0] $end
$var wire 4 / b [3:0] $end
$var wire 4 0 c [3:0] $end
$var wire 4 1 d [3:0] $end
$var wire 4 2 e [3:0] $end
$var wire 1 ' enable $end
$var wire 4 3 f [3:0] $end
$var wire 4 4 g [3:0] $end
$var wire 4 5 h [3:0] $end
$var wire 1 + sel0 $end
$var wire 1 , sel1 $end
$var wire 1 - sel2 $end
$var wire 4 6 out [3:0] $end
$scope module mux_0 $end
$var wire 1 7 a $end
$var wire 1 8 b $end
$var wire 1 9 c $end
$var wire 1 : d $end
$var wire 1 ; e $end
$var wire 1 ' enable $end
$var wire 1 < f $end
$var wire 1 = g $end
$var wire 1 > h $end
$var wire 1 ? or_ab $end
$var wire 1 @ or_abc $end
$var wire 1 A or_abcd $end
$var wire 1 B or_abcde $end
$var wire 1 C or_abcdef $end
$var wire 1 D or_abcdefg $end
$var wire 1 E out $end
$var wire 1 F out_ina0 $end
$var wire 1 G out_ina1 $end
$var wire 1 H out_ina2 $end
$var wire 1 I out_inaen $end
$var wire 1 J out_inb0 $end
$var wire 1 K out_inb1 $end
$var wire 1 L out_inb2 $end
$var wire 1 M out_inben $end
$var wire 1 N out_inc0 $end
$var wire 1 O out_inc1 $end
$var wire 1 P out_inc2 $end
$var wire 1 Q out_incen $end
$var wire 1 R out_ind0 $end
$var wire 1 S out_ind1 $end
$var wire 1 T out_ind2 $end
$var wire 1 U out_inden $end
$var wire 1 V out_ine0 $end
$var wire 1 W out_ine1 $end
$var wire 1 X out_ine2 $end
$var wire 1 Y out_ineen $end
$var wire 1 Z out_inf0 $end
$var wire 1 [ out_inf1 $end
$var wire 1 \ out_inf2 $end
$var wire 1 ] out_infen $end
$var wire 1 ^ out_ing0 $end
$var wire 1 _ out_ing1 $end
$var wire 1 ` out_ing2 $end
$var wire 1 a out_ingen $end
$var wire 1 b out_inh0 $end
$var wire 1 c out_inh1 $end
$var wire 1 d out_inh2 $end
$var wire 1 e out_inhen $end
$var wire 1 + sel0 $end
$var wire 1 , sel1 $end
$var wire 1 - sel2 $end
$upscope $end
$scope module mux_1 $end
$var wire 1 f a $end
$var wire 1 g b $end
$var wire 1 h c $end
$var wire 1 i d $end
$var wire 1 j e $end
$var wire 1 ' enable $end
$var wire 1 k f $end
$var wire 1 l g $end
$var wire 1 m h $end
$var wire 1 n or_ab $end
$var wire 1 o or_abc $end
$var wire 1 p or_abcd $end
$var wire 1 q or_abcde $end
$var wire 1 r or_abcdef $end
$var wire 1 s or_abcdefg $end
$var wire 1 t out $end
$var wire 1 u out_ina0 $end
$var wire 1 v out_ina1 $end
$var wire 1 w out_ina2 $end
$var wire 1 x out_inaen $end
$var wire 1 y out_inb0 $end
$var wire 1 z out_inb1 $end
$var wire 1 { out_inb2 $end
$var wire 1 | out_inben $end
$var wire 1 } out_inc0 $end
$var wire 1 ~ out_inc1 $end
$var wire 1 !" out_inc2 $end
$var wire 1 "" out_incen $end
$var wire 1 #" out_ind0 $end
$var wire 1 $" out_ind1 $end
$var wire 1 %" out_ind2 $end
$var wire 1 &" out_inden $end
$var wire 1 '" out_ine0 $end
$var wire 1 (" out_ine1 $end
$var wire 1 )" out_ine2 $end
$var wire 1 *" out_ineen $end
$var wire 1 +" out_inf0 $end
$var wire 1 ," out_inf1 $end
$var wire 1 -" out_inf2 $end
$var wire 1 ." out_infen $end
$var wire 1 /" out_ing0 $end
$var wire 1 0" out_ing1 $end
$var wire 1 1" out_ing2 $end
$var wire 1 2" out_ingen $end
$var wire 1 3" out_inh0 $end
$var wire 1 4" out_inh1 $end
$var wire 1 5" out_inh2 $end
$var wire 1 6" out_inhen $end
$var wire 1 + sel0 $end
$var wire 1 , sel1 $end
$var wire 1 - sel2 $end
$upscope $end
$scope module mux_2 $end
$var wire 1 7" a $end
$var wire 1 8" b $end
$var wire 1 9" c $end
$var wire 1 :" d $end
$var wire 1 ;" e $end
$var wire 1 ' enable $end
$var wire 1 <" f $end
$var wire 1 =" g $end
$var wire 1 >" h $end
$var wire 1 ?" or_ab $end
$var wire 1 @" or_abc $end
$var wire 1 A" or_abcd $end
$var wire 1 B" or_abcde $end
$var wire 1 C" or_abcdef $end
$var wire 1 D" or_abcdefg $end
$var wire 1 E" out $end
$var wire 1 F" out_ina0 $end
$var wire 1 G" out_ina1 $end
$var wire 1 H" out_ina2 $end
$var wire 1 I" out_inaen $end
$var wire 1 J" out_inb0 $end
$var wire 1 K" out_inb1 $end
$var wire 1 L" out_inb2 $end
$var wire 1 M" out_inben $end
$var wire 1 N" out_inc0 $end
$var wire 1 O" out_inc1 $end
$var wire 1 P" out_inc2 $end
$var wire 1 Q" out_incen $end
$var wire 1 R" out_ind0 $end
$var wire 1 S" out_ind1 $end
$var wire 1 T" out_ind2 $end
$var wire 1 U" out_inden $end
$var wire 1 V" out_ine0 $end
$var wire 1 W" out_ine1 $end
$var wire 1 X" out_ine2 $end
$var wire 1 Y" out_ineen $end
$var wire 1 Z" out_inf0 $end
$var wire 1 [" out_inf1 $end
$var wire 1 \" out_inf2 $end
$var wire 1 ]" out_infen $end
$var wire 1 ^" out_ing0 $end
$var wire 1 _" out_ing1 $end
$var wire 1 `" out_ing2 $end
$var wire 1 a" out_ingen $end
$var wire 1 b" out_inh0 $end
$var wire 1 c" out_inh1 $end
$var wire 1 d" out_inh2 $end
$var wire 1 e" out_inhen $end
$var wire 1 + sel0 $end
$var wire 1 , sel1 $end
$var wire 1 - sel2 $end
$upscope $end
$scope module mux_3 $end
$var wire 1 f" a $end
$var wire 1 g" b $end
$var wire 1 h" c $end
$var wire 1 i" d $end
$var wire 1 j" e $end
$var wire 1 ' enable $end
$var wire 1 k" f $end
$var wire 1 l" g $end
$var wire 1 m" h $end
$var wire 1 n" or_ab $end
$var wire 1 o" or_abc $end
$var wire 1 p" or_abcd $end
$var wire 1 q" or_abcde $end
$var wire 1 r" or_abcdef $end
$var wire 1 s" or_abcdefg $end
$var wire 1 t" out $end
$var wire 1 u" out_ina0 $end
$var wire 1 v" out_ina1 $end
$var wire 1 w" out_ina2 $end
$var wire 1 x" out_inaen $end
$var wire 1 y" out_inb0 $end
$var wire 1 z" out_inb1 $end
$var wire 1 {" out_inb2 $end
$var wire 1 |" out_inben $end
$var wire 1 }" out_inc0 $end
$var wire 1 ~" out_inc1 $end
$var wire 1 !# out_inc2 $end
$var wire 1 "# out_incen $end
$var wire 1 ## out_ind0 $end
$var wire 1 $# out_ind1 $end
$var wire 1 %# out_ind2 $end
$var wire 1 &# out_inden $end
$var wire 1 '# out_ine0 $end
$var wire 1 (# out_ine1 $end
$var wire 1 )# out_ine2 $end
$var wire 1 *# out_ineen $end
$var wire 1 +# out_inf0 $end
$var wire 1 ,# out_inf1 $end
$var wire 1 -# out_inf2 $end
$var wire 1 .# out_infen $end
$var wire 1 /# out_ing0 $end
$var wire 1 0# out_ing1 $end
$var wire 1 1# out_ing2 $end
$var wire 1 2# out_ingen $end
$var wire 1 3# out_inh0 $end
$var wire 1 4# out_inh1 $end
$var wire 1 5# out_inh2 $end
$var wire 1 6# out_inhen $end
$var wire 1 + sel0 $end
$var wire 1 , sel1 $end
$var wire 1 - sel2 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
06#
05#
04#
03#
02#
01#
00#
0/#
0.#
0-#
0,#
0+#
0*#
0)#
0(#
0'#
0&#
0%#
0$#
0##
0"#
0!#
0~"
0}"
0|"
0{"
1z"
0y"
0x"
0w"
1v"
0u"
0t"
0s"
0r"
0q"
0p"
0o"
0n"
0m"
0l"
0k"
0j"
0i"
0h"
0g"
0f"
0e"
0d"
0c"
0b"
0a"
0`"
0_"
1^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
1V"
0U"
0T"
0S"
0R"
0Q"
0P"
0O"
0N"
0M"
0L"
1K"
0J"
0I"
0H"
1G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
1>"
1="
1<"
1;"
0:"
09"
08"
07"
06"
05"
04"
03"
02"
01"
00"
1/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~
1}
0|
0{
1z
0y
0x
0w
1v
0u
0t
0s
0r
0q
0p
0o
0n
1m
1l
0k
0j
1i
1h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
1K
0J
0I
0H
1G
0F
0E
0D
0C
0B
0A
0@
0?
1>
0=
1<
0;
1:
09
18
07
b0 6
b111 5
b110 4
b101 3
b100 2
b11 1
b10 0
b1 /
b0 .
0-
0,
0+
b111 *
b110 )
b101 (
1'
b100 &
b11 %
b10 $
b1 #
b0 "
b0 !
$end
#20
0}
0/"
0V"
0^"
1J
1R
1Z
1b
1#"
13"
1Z"
1b"
1+
#40
0G
0K
0v
0z
0G"
0K"
0v"
0z"
1}
1/"
1V"
1^"
1O
1S
1~
1$"
1O"
1S"
1~"
1$#
0J
0R
0Z
0b
0#"
03"
0Z"
0b"
1,
0+
#60
0}
0/"
0V"
0^"
1J
1R
1Z
1b
1#"
13"
1Z"
1b"
1+
#80
1}
1/"
1V"
1^"
1W
1[
1("
1,"
1W"
1["
1(#
1,#
0O
0S
0~
0$"
0O"
0S"
0~"
0$#
0J
0R
0Z
0b
0#"
03"
0Z"
0b"
1-
0,
0+
#100
0}
0/"
0V"
0^"
1J
1R
1Z
1b
1#"
13"
1Z"
1b"
1+
#120
0W
0[
0("
0,"
0W"
0["
0(#
0,#
1}
1/"
1V"
1^"
1_
1c
10"
14"
1_"
1c"
10#
14#
0J
0R
0Z
0b
0#"
03"
0Z"
0b"
1,
0+
#140
0}
0/"
0V"
0^"
1J
1R
1Z
1b
1#"
13"
1Z"
1b"
1+
#160
