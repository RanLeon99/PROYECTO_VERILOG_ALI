$date
	Thu Feb 23 20:32:08 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module proyecto_tb $end
$var wire 4 ! out [3:0] $end
$var wire 1 " cout $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % cin $end
$var reg 1 & sel0 $end
$var reg 1 ' sel1 $end
$var reg 1 ( sel2 $end
$scope module uut $end
$var wire 4 ) a [3:0] $end
$var wire 4 * and_out [3:0] $end
$var wire 4 + b [3:0] $end
$var wire 1 % cin $end
$var wire 4 , nand_out [3:0] $end
$var wire 4 - nor_out [3:0] $end
$var wire 4 . or_out [3:0] $end
$var wire 4 / salida_5 [3:0] $end
$var wire 4 0 salida_6 [3:0] $end
$var wire 4 1 salida_7 [3:0] $end
$var wire 1 & sel0 $end
$var wire 1 ' sel1 $end
$var wire 1 ( sel2 $end
$var wire 4 2 s_out [3:0] $end
$var wire 4 3 out [3:0] $end
$var wire 1 " cout $end
$var wire 1 4 cin3 $end
$var wire 1 5 cin2 $end
$var wire 1 6 cin1 $end
$scope module adder_bit0 $end
$var wire 1 7 a $end
$var wire 1 8 and1 $end
$var wire 1 9 b $end
$var wire 1 % cin $end
$var wire 1 6 cout $end
$var wire 1 : or1 $end
$var wire 1 ; out $end
$upscope $end
$scope module adder_bit1 $end
$var wire 1 < a $end
$var wire 1 = and1 $end
$var wire 1 > b $end
$var wire 1 6 cin $end
$var wire 1 5 cout $end
$var wire 1 ? or1 $end
$var wire 1 @ out $end
$upscope $end
$scope module adder_bit2 $end
$var wire 1 A a $end
$var wire 1 B and1 $end
$var wire 1 C b $end
$var wire 1 5 cin $end
$var wire 1 4 cout $end
$var wire 1 D or1 $end
$var wire 1 E out $end
$upscope $end
$scope module adder_bit3 $end
$var wire 1 F a $end
$var wire 1 G and1 $end
$var wire 1 H b $end
$var wire 1 4 cin $end
$var wire 1 " cout $end
$var wire 1 I or1 $end
$var wire 1 J out $end
$upscope $end
$scope module mux $end
$var wire 4 K a [3:0] $end
$var wire 4 L b [3:0] $end
$var wire 4 M c [3:0] $end
$var wire 4 N d [3:0] $end
$var wire 4 O e [3:0] $end
$var wire 4 P f [3:0] $end
$var wire 4 Q g [3:0] $end
$var wire 4 R h [3:0] $end
$var wire 1 & sel0 $end
$var wire 1 ' sel1 $end
$var wire 1 ( sel2 $end
$var wire 4 S out [3:0] $end
$scope module mux_0 $end
$var wire 1 T a $end
$var wire 1 U b $end
$var wire 1 V c $end
$var wire 1 W d $end
$var wire 1 X e $end
$var wire 1 Y f $end
$var wire 1 Z g $end
$var wire 1 [ h $end
$var wire 1 \ or_ab $end
$var wire 1 ] or_abc $end
$var wire 1 ^ or_abcd $end
$var wire 1 _ or_abcde $end
$var wire 1 ` or_abcdef $end
$var wire 1 a or_abcdefg $end
$var wire 1 b out $end
$var wire 1 c out_ina0 $end
$var wire 1 d out_ina1 $end
$var wire 1 e out_ina2 $end
$var wire 1 f out_inb0 $end
$var wire 1 g out_inb1 $end
$var wire 1 h out_inb2 $end
$var wire 1 i out_inc0 $end
$var wire 1 j out_inc1 $end
$var wire 1 k out_inc2 $end
$var wire 1 l out_ind0 $end
$var wire 1 m out_ind1 $end
$var wire 1 n out_ind2 $end
$var wire 1 o out_ine0 $end
$var wire 1 p out_ine1 $end
$var wire 1 q out_ine2 $end
$var wire 1 r out_inf0 $end
$var wire 1 s out_inf1 $end
$var wire 1 t out_inf2 $end
$var wire 1 u out_ing0 $end
$var wire 1 v out_ing1 $end
$var wire 1 w out_ing2 $end
$var wire 1 x out_inh0 $end
$var wire 1 y out_inh1 $end
$var wire 1 z out_inh2 $end
$var wire 1 & sel0 $end
$var wire 1 ' sel1 $end
$var wire 1 ( sel2 $end
$upscope $end
$scope module mux_1 $end
$var wire 1 { a $end
$var wire 1 | b $end
$var wire 1 } c $end
$var wire 1 ~ d $end
$var wire 1 !" e $end
$var wire 1 "" f $end
$var wire 1 #" g $end
$var wire 1 $" h $end
$var wire 1 %" or_ab $end
$var wire 1 &" or_abc $end
$var wire 1 '" or_abcd $end
$var wire 1 (" or_abcde $end
$var wire 1 )" or_abcdef $end
$var wire 1 *" or_abcdefg $end
$var wire 1 +" out $end
$var wire 1 ," out_ina0 $end
$var wire 1 -" out_ina1 $end
$var wire 1 ." out_ina2 $end
$var wire 1 /" out_inb0 $end
$var wire 1 0" out_inb1 $end
$var wire 1 1" out_inb2 $end
$var wire 1 2" out_inc0 $end
$var wire 1 3" out_inc1 $end
$var wire 1 4" out_inc2 $end
$var wire 1 5" out_ind0 $end
$var wire 1 6" out_ind1 $end
$var wire 1 7" out_ind2 $end
$var wire 1 8" out_ine0 $end
$var wire 1 9" out_ine1 $end
$var wire 1 :" out_ine2 $end
$var wire 1 ;" out_inf0 $end
$var wire 1 <" out_inf1 $end
$var wire 1 =" out_inf2 $end
$var wire 1 >" out_ing0 $end
$var wire 1 ?" out_ing1 $end
$var wire 1 @" out_ing2 $end
$var wire 1 A" out_inh0 $end
$var wire 1 B" out_inh1 $end
$var wire 1 C" out_inh2 $end
$var wire 1 & sel0 $end
$var wire 1 ' sel1 $end
$var wire 1 ( sel2 $end
$upscope $end
$scope module mux_2 $end
$var wire 1 D" a $end
$var wire 1 E" b $end
$var wire 1 F" c $end
$var wire 1 G" d $end
$var wire 1 H" e $end
$var wire 1 I" f $end
$var wire 1 J" g $end
$var wire 1 K" h $end
$var wire 1 L" or_ab $end
$var wire 1 M" or_abc $end
$var wire 1 N" or_abcd $end
$var wire 1 O" or_abcde $end
$var wire 1 P" or_abcdef $end
$var wire 1 Q" or_abcdefg $end
$var wire 1 R" out $end
$var wire 1 S" out_ina0 $end
$var wire 1 T" out_ina1 $end
$var wire 1 U" out_ina2 $end
$var wire 1 V" out_inb0 $end
$var wire 1 W" out_inb1 $end
$var wire 1 X" out_inb2 $end
$var wire 1 Y" out_inc0 $end
$var wire 1 Z" out_inc1 $end
$var wire 1 [" out_inc2 $end
$var wire 1 \" out_ind0 $end
$var wire 1 ]" out_ind1 $end
$var wire 1 ^" out_ind2 $end
$var wire 1 _" out_ine0 $end
$var wire 1 `" out_ine1 $end
$var wire 1 a" out_ine2 $end
$var wire 1 b" out_inf0 $end
$var wire 1 c" out_inf1 $end
$var wire 1 d" out_inf2 $end
$var wire 1 e" out_ing0 $end
$var wire 1 f" out_ing1 $end
$var wire 1 g" out_ing2 $end
$var wire 1 h" out_inh0 $end
$var wire 1 i" out_inh1 $end
$var wire 1 j" out_inh2 $end
$var wire 1 & sel0 $end
$var wire 1 ' sel1 $end
$var wire 1 ( sel2 $end
$upscope $end
$scope module mux_3 $end
$var wire 1 k" a $end
$var wire 1 l" b $end
$var wire 1 m" c $end
$var wire 1 n" d $end
$var wire 1 o" e $end
$var wire 1 p" f $end
$var wire 1 q" g $end
$var wire 1 r" h $end
$var wire 1 s" or_ab $end
$var wire 1 t" or_abc $end
$var wire 1 u" or_abcd $end
$var wire 1 v" or_abcde $end
$var wire 1 w" or_abcdef $end
$var wire 1 x" or_abcdefg $end
$var wire 1 y" out $end
$var wire 1 z" out_ina0 $end
$var wire 1 {" out_ina1 $end
$var wire 1 |" out_ina2 $end
$var wire 1 }" out_inb0 $end
$var wire 1 ~" out_inb1 $end
$var wire 1 !# out_inb2 $end
$var wire 1 "# out_inc0 $end
$var wire 1 ## out_inc1 $end
$var wire 1 $# out_inc2 $end
$var wire 1 %# out_ind0 $end
$var wire 1 &# out_ind1 $end
$var wire 1 '# out_ind2 $end
$var wire 1 (# out_ine0 $end
$var wire 1 )# out_ine1 $end
$var wire 1 *# out_ine2 $end
$var wire 1 +# out_inf0 $end
$var wire 1 ,# out_inf1 $end
$var wire 1 -# out_inf2 $end
$var wire 1 .# out_ing0 $end
$var wire 1 /# out_ing1 $end
$var wire 1 0# out_ing2 $end
$var wire 1 1# out_inh0 $end
$var wire 1 2# out_inh1 $end
$var wire 1 3# out_inh2 $end
$var wire 1 & sel0 $end
$var wire 1 ' sel1 $end
$var wire 1 ( sel2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
03#
02#
01#
00#
0/#
0.#
0-#
0,#
0+#
0*#
0)#
0(#
0'#
0&#
0%#
0$#
0##
1"#
0!#
1~"
0}"
0|"
1{"
0z"
0y"
0x"
0w"
0v"
0u"
0t"
0s"
0r"
0q"
0p"
0o"
0n"
1m"
1l"
0k"
0j"
0i"
0h"
0g"
0f"
0e"
0d"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
1Y"
0X"
1W"
0V"
1U"
1T"
1S"
1R"
1Q"
1P"
1O"
1N"
1M"
1L"
0K"
0J"
0I"
0H"
1G"
1F"
0E"
1D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
18"
07"
06"
05"
04"
03"
02"
01"
10"
0/"
0."
1-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
1!"
1~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
1o
0n
0m
0l
0k
0j
0i
0h
1g
0f
1e
1d
1c
1b
1a
1`
1_
1^
1]
1\
0[
0Z
0Y
1X
1W
0V
0U
1T
b101 S
b0 R
b0 Q
b0 P
b11 O
b111 N
b1100 M
b1000 L
b101 K
0J
0I
1H
1G
1F
1E
1D
1C
0B
0A
0@
0?
0>
0=
0<
1;
0:
09
08
07
06
05
04
b101 3
b101 2
b0 1
b0 0
b0 /
b1100 .
b11 -
b111 ,
b1100 +
b1000 *
b1000 )
0(
0'
0&
1%
b1100 $
b1000 #
1"
b101 !
$end
#20
0b
0R"
0a
0Q"
b1000 !
b1000 3
b1000 S
1y"
0`
0P"
1x"
0_
0O"
1w"
0^
0N"
1v"
0]
0M"
1u"
0\
0L"
1t"
0e
0U"
1s"
0c
0o
08"
0S"
0Y"
1!#
0"#
1l
15"
1\"
1}"
1&
#40
b1100 !
b1100 3
b1100 S
1R"
1Q"
1P"
1O"
1N"
1M"
0s"
0d
0g
0-"
00"
0T"
0W"
1["
0{"
0~"
1$#
1c
1o
18"
1S"
1Y"
0!#
1"#
1j
1m
13"
16"
1Z"
1]"
1##
1&#
0l
05"
0\"
0}"
1'
0&
#60
0y"
0x"
1b
b111 !
b111 3
b111 S
1+"
0w"
1a
1*"
0v"
1`
1)"
0u"
1_
1("
0M"
0t"
1^
1'"
0["
0$#
0c
1n
0o
17"
08"
0S"
0Y"
1^"
0"#
1l
15"
1\"
1}"
1&
#80
b11 !
b11 3
b11 S
0R"
0Q"
0P"
0O"
0^
0'"
0N"
1q
1:"
1c
0n
1o
07"
18"
1S"
1Y"
0^"
1"#
1p
1s
19"
1<"
1`"
1c"
1)#
1,#
0j
0m
03"
06"
0Z"
0]"
0##
0&#
0l
05"
0\"
0}"
1(
0'
0&
#100
0b
b0 !
b0 3
b0 S
0+"
0a
0*"
0`
0)"
0_
0("
0q
0:"
0c
0o
08"
0S"
0Y"
0"#
1l
15"
1\"
1}"
1&
#120
0p
0s
09"
0<"
0`"
0c"
0)#
0,#
1c
1o
18"
1S"
1Y"
1"#
1v
1y
1?"
1B"
1f"
1i"
1/#
12#
0l
05"
0\"
0}"
1'
0&
#140
0c
0o
08"
0S"
0Y"
0"#
1l
15"
1\"
1}"
1&
#160
